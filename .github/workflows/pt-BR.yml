name: Deploy Jekyll to GitHub Pages

on:
  push:
    branches: ["main"]
    paths-ignore:
      - '.github/workflows/*.yml'
      - 'README.md'
  workflow_dispatch:
  schedule:
    - cron: '0 0 */2 * *'

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      metadata_updated: ${{ steps.check-metadata.outputs.updated }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        id: npm-install
        run: |
          # Verifica se package-lock.json existe
          if [ -f "package-lock.json" ]; then
            echo "Using npm ci for deterministic install"
            npm ci
          else
            echo "No package-lock.json found, using npm install"
            npm install
          fi

      - name: Generate files metadata
        id: generate-metadata
        run: npm start
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check for metadata changes
        id: check-metadata
        run: |
          if git diff --exit-code files_metadata.json; then
            echo "No metadata changes detected"
            echo "updated=false" >> $GITHUB_OUTPUT
          else
            echo "Metadata changes detected"
            echo "updated=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit metadata changes
        if: steps.check-metadata.outputs.updated == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add files_metadata.json
          git commit -m "Automatic metadata update [skip ci]"
          git push

      - name: Generate package-lock.json
        if: steps.npm-install.outcome == 'success' && !(steps.npm-install.outputs.lockfile-exists)
        run: |
          npm install --package-lock-only
          git add package-lock.json
          git commit -m "Add package-lock.json" || echo "No changes to commit"
          git push || echo "Nothing to push"

  build:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true

      - name: Install Jekyll and Bundler
        run: |
          gem install jekyll bundler
          bundle install

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
          verbose: true

      - name: Verify build output
        run: |
          if [ ! -d "_site" ]; then
            echo "Error: _site directory not found"
            exit 1
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './_site'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Wait for previous deployments
        uses: fountainhead/action-wait-for-check@v2.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.ref }}
          check-name: "pages build and deployment"
          timeout-seconds: 600
          interval-seconds: 10

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        timeout-minutes: 30
