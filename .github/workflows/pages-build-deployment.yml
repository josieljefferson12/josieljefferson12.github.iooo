name: Deploy Jekyll with GitHub Pages Ãšnico

on:
  push:
    branches: ["main"]
    paths:
      - '**/*'
  workflow_dispatch:
  schedule:
    - cron: '0 0 */2 * *'

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Generate files metadata
        run: npm start
        env:
          GITHUB_TOKEN: ${{ secrets.MY_PAGES_GITHUB_TOKEN }}

      - name: Commit metadata changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add files_metadata.json
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Automatic metadata update [skip ci]" || echo "Commit failed - continuing..."
            git pull --rebase origin main || echo "Rebase failed - continuing..."
            git push origin main || echo "Push failed - continuing..."
          fi
        continue-on-error: true

  build:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './_site'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check for existing deployments
        id: check-deploy
        run: |
          # Get current pages status
          response=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/pages")
          
          status=$(echo "$response" | jq -r '.status')
          build_type=$(echo "$response" | jq -r '.build_type')
          
          # If there's an active build or it's already built, skip deployment
          if [[ "$status" == "building" || "$status" == "built" ]]; then
            echo "Pages deployment already in progress or completed. Skipping..."
            echo "skip_deploy=true" >> $GITHUB_OUTPUT
          else
            echo "No active deployment found. Proceeding..."
            echo "skip_deploy=false" >> $GITHUB_OUTPUT
          fi

      - name: Deploy to GitHub Pages
        if: steps.check-deploy.outputs.skip_deploy != 'true'
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
